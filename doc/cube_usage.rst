=========================================
How can I use the Earth System Data Cube?
=========================================

Technical Dataset Description
=============================

.. Responsible: BC


General Data Cube Format, Content and Organisation
--------------------------------------------------

The binary data format for theearth System Data Cube (ESDC) in the CABLAB project is **netCDF 4 classic**, where the term classic stands for an
underlying HDF-5 format accessed by a netCDF 4 API.

The netCDF file's content and structure follows the CF-conventions. That is, there are are always at least three
dimensions defined

1. ``lon`` - Always the inner, therefore fastest varying dimension, Provides the **raster width** of spatial images.
2. ``lat`` - Always the second dimension. Provides the **raster height** of spatial images.
3. ``time`` - Time dimension.

There are 1D-variables related to each dimension providing its tabulated values:

* ``lon(lon)`` and ``lat(lon)`` - longitudes and latitudes in *decimal degrees* defined in a WGS-84 geographical
  coordinate reference system. Values have all the same step width, referred to as the Data Cube's
  **spatial resolution**.
* ``start_time(time)`` and ``end_time(time)`` - Period start and end times given in *days since 2001-01-01 00:00*.
  Values have all same step width referred to as the Data Cube's **temporal resolution**.

There is usually only a single geophysical variable with the *shape*\ (``time``, ``lat``, ``lon``) represented by each
netCDF file. So each netCDF file is composed of *length*\ (``time``) spatial images of that variable, where each image
of size *length*\ (``lon``) x *length*\ (``lat``) pixels has been generated by aggregating all source data contributing
to the period given by the Data Cube's temporal resolution.

To limit the size of individual files, the geophysical variables are stored in one file per year. For example,
if the temporal resolution is 0.25 degrees and the the spatial resolution is 8-day periods then there will be up to 46
images of 1440 x 720 pixels in each annual netCDF file. These annual files are stored in dedicated sub-directories
as follows::

    <cube-root-dir>/
        cube.config
        data/
            LAI/
                2001_LAI.nc
                2002_LAI.nc
                ...
                2011_LAI.nc
            Ozone/
                2001_Ozone.nc
                2002_Ozone.nc
                ...
                2011_Ozone.nc
            ...

The names of the geophysical variable in a netCDF file must match the name of it corresponding sub-directory and the
names of the their contained files.

The text file ``cube.config`` contains a Data Cube's static configuration such as its temporal and spatial resolution.
Also the spatial coverage will be constant, that is, all spatial images will always be of same size. However, fill
values may be present to indicate missing data. The fill values used are always the ones used in the Data Cube's
sources. The same holds for the data types.  While all images for all time periods have the same size, the temporal
coverage may be individual for a given variable. Missing spatial images for a given time period are treated as images
with all pixels set to a fill value.

The following table contains all possible configuration parameters:

====================  ==============================  ==========================================================
Parameter             Default Value                   Description
====================  ==============================  ==========================================================
``temporal_res``      ``8``                           The constant temporal resolution given as integer days.
``calendar``          ``'gregorian'``                 Defines this Cube's time units.
``ref_time``          ``datetime(2001, 1, 1)``        The Cube's time units are days since this reference date/time.
``start_time``        ``datetime(2001, 1, 1)``        The start date/time of contributing source data.
``end_time``          ``datetime(2011, 1, 1)``        The end date/time of contributing source data.
``spatial_res``       ``0.25``                        The constant spatial resolution given in decimal degrees.
``grid_x0``           ``0``                           The spatial grid's X-offset. *Not used yet.*
``grid_y0``           ``0``                           The spatial grid's Y-offset. *Not used yet.*
``grid_width``        ``1440``                        The spatial grid's width. Must always be 360 / ``spatial_res``.
``grid_height``       ``720``                         The spatial grid's height. Must always be 180 / ``spatial_res``.
``variables``         ``None``                        The variables contained in this Cube.  *Not used yet.*
``file_format``       ``'NETCDF4_CLASSIC'``           The target binary file format.
``compression``       ``False``                       Whether or not the target binary files should be compressed.
``model_version``     ``'0.1'``                       The version of the Data Cube model and configuration.
====================  ==============================  ==========================================================

General Processing Methods Description
--------------------------------------

The Data Cube is generated by the ``cube-cli`` tool. This tools creates Data Cube's for a given configuration
and can be used to add one variable by another to the Cube. Each variable is read from its specific data source and
transformed in time and space so that it matches the constraints given by the target Cube's configuration.

The general approach is as follows: For each variable and a given Cube time period:
* Read the variable's data from all contributing sources that have an overlap with the target period;
* Perform a temporal aggregation of all contributing spatial images in the original spatial resolution;
* Perform a spatial upsampling or downsampling of the image aggregated in time;
* Mask the resulting upsampled/downsampled image by a common land-sea mask;
* Insert the final image for the variable and target time period into the Cube.

.. todo:: Fabian: provide scientific justification here for this approach.*

The following sections describe each method used in more detail.

Gap-Filling Approach
####################

The current version (version 1.0, Nov 2015) of the ESDC is not explicitly gap-filled. However, a certain
gap-filling occurs during temporal aggregation as described in the next section. The CAB-LAB team may provide
gap-filled ESDC versions at a later point in time of the project. Gap-filling is part of the *Data Analytics
Toolkit*, not tackled during Cube generation.

For these future Cube versions per-variable gap-filling strategies may be applied. Also, only a spatio-temporal
region of interest may be gap-filled while cells out of that region may be filled by global default values. An example
of that would be that gap-filling for LAI values only take place in a mid-latitude range while high-latitudes are
filled by zeros.

Temporal Resampling
###################

Temporal resampling starts on the 1st January of every year so that all the *i*-th spatial images in the ESDC
refer to the same time of the year, namely starting *i* x *temporal resolution*. Source data is collected for every
resulting ESDC target period. If there is more than one contribution in time, then we weight each contribution
according to its temporal overlap with a given target period. Finally the target pixels are computed by averaging
all contributing values in time not masked by a fill value hereby introducing a certain temporal gap-filling.

.. todo:: Norman: put graphic here showing how weights are determined.*

.. todo:: Norman: put equation here including weights and also respect fill values.*

Spatial Resampling
##################

Spatial resampling applies to an image that is the result of a former temporal resampling if the ESDC's spatial
resolution is different from the data source resolution.

If the ESDC's spatial resolution is higher than the data source spatial resolution, source images are **upsampled
by rescaling hereby duplicating original values, but not performing any spatial interpolation**.

If the ESDC's spatial resolution is lower than the data source spatial resolution, source images are **downsampled
by aggregation hereby performing a weighted spatial averaging taking into account missing values**. If there is not an
integer factor between the source and Cube resolution, weights will be found according to the spatial overlap of source
and target cells.

Land-Water Masking
##################

After spatial resampling, a land-water mask is applied to individual variables depending on whether
a variable is defined for water surfaces only, land surfaces only, or both. A common land-water mask is used for all
variables for a given spatial Cube resolution. Masked values are indicated by fill values.



Constraints and Limitations
---------------------------

Write me!

Dataset Usage
=============

Write me!

Dataset Access Service
----------------------

*Responsible: BC*

Write me!

Data Access API
---------------

*Responsible: BC*

Write me!

Data Analytics Toolkit
----------------------

*Responsible: MPI*

Write me!

Use Cases and Examples
----------------------

*Responsible: MPI*

*Remark: code snippets and specific example of how-to*

Write me!

Constraints and Limitations
---------------------------

Write me!
